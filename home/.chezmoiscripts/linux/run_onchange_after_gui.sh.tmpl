#!/usr/bin/env bash

echo "run_onchange_after_gui.sh.tmpl"
echo "{{ .chezmoi.os }} system setup"
echo "--------------------------------"

# アーキテクチャを取得
arch="$(dpkg --print-architecture)"

sudo=""
if [ "$(id -u)" -ne 0 ]; then
    sudo="sudo"
fi

# デスクトップ環境のインストール
# package は .chezmoidata/packages.yaml に記載
# .packages.linux.gui にはxfceデスクトップ環境をインストールするパッケージを記載

desktop_setup() {
    $sudo apt-get update -y
    $sudo apt-get upgrade -y

    {{ range .packages.linux.gui }}
    if ! dpkg -l | grep -q {{ . }}; then
        $sudo apt-get install -y {{ . }} || echo "{{ . }} install failed." >> ${HOME}/which
    fi
    {{ end }}

    #$sudo apt-get remove -y light-locker xscreensaver &&
    $sudo apt-get autoremove -y
    $sudo apt-get clean
    $sudo rm -rf /var/cache/apt /var/lib/apt/lists/*
    echo "desktop packages installed."
}

install_brave_browser() {
    if command -v brave-browser >/dev/null 2>&1; then
        echo "brave browser already installed."
    else
        $sudo curl -fsSLo /usr/share/keyrings/brave-browser-archive-keyring.gpg https://brave-browser-apt-release.s3.brave.com/brave-browser-archive-keyring.gpg
        echo "deb [signed-by=/usr/share/keyrings/brave-browser-archive-keyring.gpg] https://brave-browser-apt-release.s3.brave.com/ stable main" | $sudo tee /etc/apt/sources.list.d/brave-browser-release.list
        $sudo apt-get update -y
        $sudo apt-get install -y brave-browser || echo "brave browser install failed."
        echo "brave browser installed."
    fi
}

install_cloudflare_warp() {
    if command -v warp-cli >/dev/null 2>&1; then
        echo "cloudflare warp already installed."
    else
        $sudo curl -fsSL https://pkg.cloudflareclient.com/pubkey.gpg | $sudo gpg --yes --dearmor --output /usr/share/keyrings/cloudflare-warp-archive-keyring.gpg
        echo "deb [signed-by=/usr/share/keyrings/cloudflare-warp-archive-keyring.gpg] https://pkg.cloudflareclient.com/ $(lsb_release -cs) main" | $sudo tee /etc/apt/sources.list.d/cloudflare-client.list
        $sudo apt-get update -y
        $sudo apt-get install -y cloudflare-warp || echo "cloudflare warp install failed."
        echo "cloudflare warp installed."

        warp-cli --accept-tos registration new
        warp-cli --accept-tos mode warp
        warp-cli --accept-tos dns families malware
        warp-cli --accept-tos connect
        warp-cli --accept-tos disconnect

        echo "cloudflare warp installed."
    fi
}

install_cursor() {
    # appimage用の Application ディレクトリの作成
    appimage="${HOME}/Applications/cursor"
    mkdir -p "${HOME}/Applications"

    # cursor download アーキテクチャに応じて
    if [ -f "${appimage}" ]; then
        echo "cursor already installed."

    elif [ "${arch}" = "amd64" ]; then
        curl -L https://downloader.cursor.sh/inulx -o "${appimage}" || echo "cursor download failed."

    elif [ "${arch}" = "arm64" ]; then
        curl -L https://github.com/coder/cursor-arm/releases/download/v0.42.2/cursor_0.42.2_linux_arm64.AppImage -o "${appimage}" || echo "cursor download failed."
    fi

    # cursor の実行ファイルに実行権限を付与
    $sudo chmod a+x "${appimage}"

    # libfuse2 が必要なのでインストール
    sudo apt-get install -y libfuse2 || echo "libfuse2 install failed."

    # cursor の実行方法を表示
    echo 'use command: ${appimage} --no-sandbox'

    echo "cursor installed."
}

install_element_desktop() {
    if command -v element-desktop >/dev/null 2>&1; then
        echo "element desktop already installed."
    else
        $sudo apt-get install -y wget apt-transport-https
        $sudo wget -O /usr/share/keyrings/element-io-archive-keyring.gpg https://packages.element.io/debian/element-io-archive-keyring.gpg
        echo "deb [signed-by=/usr/share/keyrings/element-io-archive-keyring.gpg] https://packages.element.io/debian/ default main" | $sudo tee /etc/apt/sources.list.d/element-io.list
        $sudo apt-get update -y
        $sudo apt-get install -y element-desktop || echo "element desktop install failed."
        echo "element desktop installed."
    fi
}

install_github_desktop() {
    if command -v github-desktop >/dev/null 2>&1; then
        echo "github desktop already installed."
    else
        $sudo curl -L https://github.com/shiftkey/desktop/releases/download/release-3.4.3-linux1/GitHubDesktop-linux-${arch}-3.4.3-linux1.deb -o GitHubDesktop-linux-${arch}-3.4.3-linux1.deb
        $sudo dpkg -i GitHubDesktop-linux-${arch}-3.4.3-linux1.deb || echo "github desktop install failed."
        $sudo rm -f GitHubDesktop-linux-${arch}-3.4.3-linux1.deb
        echo "github desktop installed."
    fi
}

install_ruby_fusuma() {
    # ruby のインストール
    if command -v gem >/dev/null; then
        echo "ruby already installed."
    elif command -v mise >/dev/null; then
        mise use ruby -g -y || echo "ruby install failed."
        echo "ruby installed."
    else
        curl -sSL https://raw.githubusercontent.com/mise-tea/mise/master/get | bash || echo "mise install failed."
        mise use ruby -g -y || echo "ruby install failed."
        echo "ruby installed."
    fi

    # fusuma のインストール
    if command -v fusuma >/dev/null 2>&1; then
        echo "fusuma already installed."
    elif command -v gem >/dev/null; then
        $sudo gem install fusuma || echo "fusuma install failed."
        $sudo groupadd -f input
        $sudo usermod -aG input "$(whoami)"
        fusuma -d
        echo "fusuma installed."
    else
        echo "gem command not found."
    fi
}

install_tabby_terminal() {
    if command -v tabby >/dev/null 2>&1; then
        echo "tabby terminal already installed."
    else
        curl https://packagecloud.io/install/repositories/eugeny/tabby/script.deb.sh | $sudo bash
        $sudo apt-get update -y
        $sudo apt-get install -y tabby-terminal || echo "tabby terminal install failed."
        echo "tabby terminal installed."
    fi
}

install_vscode() {
    if command -v code >/dev/null 2>&1; then
        echo "vscode already installed."
    else
        $sudo wget -qO- https://packages.microsoft.com/keys/microsoft.asc | $sudo gpg --dearmor > packages.microsoft.gpg
        $sudo install -D -o root -g root -m 644 packages.microsoft.gpg /etc/apt/keyrings/packages.microsoft.gpg
        echo "deb [arch=${arch} signed-by=/etc/apt/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main" | $sudo tee /etc/apt/sources.list.d/vscode.list > /dev/null
        $sudo rm -f packages.microsoft.gpg
        $sudo apt-get update -y
        $sudo apt-get install -y code || echo "vscode install failed."
        echo "vscode installed."
    fi
}

install_wireshark() {
    if command -v wireshark >/dev/null 2>&1; then
        echo "wireshark already installed."
    else
        $sudo apt install -y wireshark || echo "wireshark install failed."
        $sudo groupadd -f wireshark
        $sudo usermod -aG wireshark "$(whoami)"
        $sudo chmod +x /usr/bin/dumpcap
        echo "wireshark installed."
    fi
}

echo "ubuntu desktop setup start..."
desktop_setup
install_brave_browser
install_cloudflare_warp
install_cursor
install_element_desktop
install_github_desktop
install_ruby_fusuma
install_tabby_terminal
install_vscode
# install_wireshark
echo "desktop setup complete"
echo "--------------------------------"
fastfetch || neofetch
echo "--------------------------------"
