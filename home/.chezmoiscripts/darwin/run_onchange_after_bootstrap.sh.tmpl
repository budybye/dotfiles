#!/usr/bin/env bash

echo "run_onchange_after_bootstrap.sh.tmpl"
echo "--------------------------------"

# Xcode コマンドラインツールのインストールおよびパスの設定
install_xcode_command_line_tools() {
    echo "Xcode command line tools check it..."
    if [ "$(command -v xcode-select -p)" ]; then
        echo "Xcode command line tools already installed."
    else
        xcode-select --install || echo "Xcode command line tools install failed."
        echo "Xcode command line tools install done."
    fi
    CURRENT_PATH=$(xcode-select -p)
    DESIRED_PATH="/Library/Developer/CommandLineTools"

    if [ "$CURRENT_PATH" != "$DESIRED_PATH" ]; then
        echo "change path to $DESIRED_PATH"
        sudo xcode-select --switch "$DESIRED_PATH" || {
            echo "path change failed. reset initial settings."
            sudo xcode-select --reset
        }
        echo "$DESIRED_PATH setup done."
    fi
}

install_rosetta() {
    if [[ "$(uname -m)" == "arm64" ]]; then
        echo "Apple Silicon Mac detected. check Rosetta 2 install..."
        /usr/bin/pgrep oahd >/dev/null || /usr/sbin/softwareupdate --install-rosetta --agree-to-license || echo "Rosetta 2 install failed."
    else
        echo "Rosetta 2 not needed (Intel Mac)."
    fi
    echo "Rosetta 2 install done."
}

install_homebrew() {
    echo "Homebrew install check it..."
    if [ "$(command -v brew)" ]; then
        echo "Homebrew already installed."
    else
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)" || echo "Homebrew install failed."
        eval "$(/opt/homebrew/bin/brew shellenv)"
        echo "Homebrew installed."
    fi
}

install_brew_packages() {
    brew --version
    brewlist=$(brew list)

    {{- if .packages.darwin.formula }}
    {{- range .packages.darwin.formula }}
    if ! echo "$brewlist" | grep -q "{{ . }}"; then
        brew install "{{ . }}" || echo "{{ . }} install failed."
    else
        echo "{{ . }} already installed."
    fi
    {{- end }}
    {{- end }}

    {{- if .packages.darwin.cask }}
    {{- range .packages.darwin.cask }}
    if ! echo "$brewlist" | grep -q "{{ . }}"; then
        brew install --cask "{{ . }}" || echo "{{ . }} install failed."
    else
        echo "{{ . }} already installed."
    fi
    {{- end }}
    {{- end }}

    if ! command -v tree >/dev/null 2>&1; then
        brew install tree
    fi

    brew update
    brew upgrade
    brew autoremove
    brew cleanup
    brew doctor
    brew list
    echo "packages install done."
}

install_mise() {
    if command -v mise >/dev/null; then
        echo "mise already installed."
    else
        brew install mise
        mise --version || echo "mise install failed."
    fi

    if [ -f ${HOME}/.config/mise/config.toml ]; then
        mise install -g -y
    else

        {{ range .packages.mise }}

        mise use -g -y "{{ . }}" || echo "{{ . }} install failed."

        {{ end }}

    fi

    mise activate --shims
    mise activate bash
    mise bin-paths
    echo "mise setup completed."
}

echo "bootstrap start."
install_xcode_command_line_tools
install_rosetta
install_homebrew
install_brew_packages
install_mise
echo "bootstrap done."
echo "--------------------------------"
echo "zsh --version $(zsh --version)"
echo "Package install && update done!!"
echo "--------------------------------"
