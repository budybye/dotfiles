# 重複したPATHを削除
if command -v awk > /dev/null 2>&1;then
    export PATH="$(printf %s "${PATH}" | awk -v RS=: -v ORS=: '!arr[$0]++')"
fi

# よく使うコマンド
alias q="exit"
alias c="clear"
alias hh="cd ~"
alias www="ps aux"
alias now="date +%Y%m%d%H%M%S"

# grep系エイリアス
alias vv="env | grep"
alias hg="history | grep"

# システム情報
alias sysinfo="uname -a && uptime"
alias meminfo="free -h 2>/dev/null || vm_stat"
alias diskinfo="df -h"

SHELL=${SHELL:-bash}
# シェルの再起動
alias rl="exec ${SHELL} -l"
# デバッグ・メンテナンス用
alias reload="exec ${SHELL} -l && exec ${SHELL} -l"

# シェルのパフォーマンス測定
alias opi="for i in {1..3}; do time ${SHELL} -ic exit;done"
alias oppi="for i in {1..3}; do time ${SHELL} -lc exit;done && exec ${SHELL}"

# ドキュメント
alias note="${EDITOR:-vim} ${HOME}/Documents/note.md"  # ノートを開く
alias docs="cd ${HOME}/Documents"  # ドキュメントフォルダに移動
alias br="echo -------------------------------------" # 区切り線

# ファイル操作のエイリアス
alias mv="mv -i"   # 上書き確認を有効にする
alias cp="cp -i"   # 上書き確認を有効にする
alias rm="rm -i"   # 削除確認を有効にする
alias mkdir="mkdir -p"  # 親ディレクトリも作成

# git
if command -v git >/dev/null 2>&1; then
    alias g="git"
    # add all, commit, push
    function bit() {
      git add -A
      if [ -z "$1" ]; then
        git commit --allow-empty-message -m "♨️⛰️♨️"
      else
        git commit -m "$1"
      fi
      git push origin $(git branch | sed -n -e "s/^\* \(.*\)/\1/p")
    }
fi

if command -v gh >/dev/null 2>&1; then
    alias gs="gh secret set"
    alias gg="gh repo view --web ${1:-budybye/dotfiles}"
    alias gql="gh api rate_limit --jq '.resources.core'"
    alias gsh="gh repo view budybye/dotfiles --json ssh_url -q '.ssh_url'"
fi

if command -v jj >/dev/null 2>&1; then
    alias jj="jj"
fi

if command -v jjui >/dev/null 2>&1; then
    alias jju="jjui"
fi

# vim nvim
if command -v nvim >/dev/null 2>&1; then
    alias v="nvim"
elif command -v vim >/dev/null 2>&1; then
    alias v="vim"
else
    alias v=${EDITOR:-vi}
fi

if command -v curl >/dev/null 2>&1; then
    alias curl="curl -fsSL"  # オプション
    alias ppp="curl -4 icanhazip.com && curl -6 icanhazip.com"  # パブリックIPアドレスを表示
    alias wt="curl wttr.in"  # 天気予報を表示
    alias qr="curl qrenco.de/https://${1:-やってるか.みんな}"  # QRコードを表示
fi

if command -v ping >/dev/null 2>&1; then
    # 3回だけpingを送信 デフォルトは1.1.1.1
    function pi() {
      command ping -c 3 ${@:-1.1.1.1}
    }
    alias ping="pi"
fi

if command -v websocat >/dev/null 2>&1; then
    alias ws='websocat'
fi

if command -v netstat >/dev/null 2>&1; then
    alias ports="netstat -tuln"  # 開いているポートを表示
fi

# ip を表示
if command -v ipconfig >/dev/null 2>&1; then
    alias ip="ipconfig getifaddr en0"
elif command -v ifconfig >/dev/null 2>&1; then
    alias ip="ifconfig en0 inet"
elif command -v ip >/dev/null 2>&1; then
    alias ip="ip addr show"
fi

if command -v python3 >/dev/null 2>&1; then
    alias python="python3"
fi

if command -v pip3 >/dev/null 2>&1; then
    alias pip="pip3"
fi

# 宗教問題
if command -v bun >/dev/null 2>&1; then
    # alias npm="bun"
    # alias npx="bunx"
    # alias yarn="bun"
    # alias yarnx="bunx"
    alias dv="bun dev"
    alias de="time bun run deploy"
fi

# ツリー表示
if command -v tree >/dev/null 2>&1; then
    alias tree="tree -NC"   # N: 文字化け対策 C: 色を付ける
fi

# クリップボード mac linux
if command -v pbcopy >/dev/null 2>&1; then
    alias cx="pbcopy"
    alias cv="pbpaste"
    alias cb="pbcopy"
elif command -v xsel >/dev/null 2>&1; then
    alias cx="xsel -b -i"  # クリップボードにコピー
    alias cv="xsel -b -o"  # クリップボードの内容をコマンドに渡す
    alias cb="xsel -b"
fi

# http://localhost:3000 をブラウザで開く
if command -v xdg-open >/dev/null 2>&1; then
    alias lh="xdg-open http://localhost:3000"
    alias ggg="xdg-open https://youtu.be"
elif command -v open >/dev/null 2>&1; then
    alias lh="open -na 'Brave Browser' --args --new-window http://localhost:3000"
    alias ggg="open -na 'Brave Browser' --args --new-window https://youtu.be"
fi

# rosetta2のエイリアス
if command -v arch >/dev/null 2>&1; then
    alias amd="arch -x86_64 ${SHELL}"
    alias arm="arch -arm64 ${SHELL}"
fi

# ls を lsd に変更
if command -v lsd >/dev/null 2>&1; then
    alias ls='lsd --group-directories-first'
    alias l='ls -la'
    alias ll='ls -l'
    alias la='ls -a'
    alias lls='ls -la'
    alias lt='ls --tree'
fi

# cat を bat に 変更
if command -v bat >/dev/null 2>&1; then
    alias cat="bat -p"
fi

# grep を rg に変更
if command -v rg >/dev/null 2>&1; then
    alias grep="rg --color=always"
    alias vv="env | rg ''"
fi

# find を fd に変更
if command -v fd >/dev/null 2>&1; then
    alias find="fd"
fi

# cd を zoxide に変更
if command -v zoxide >/dev/null 2>&1; then
    alias cd="z"
fi

# tldr
if command -v tldr >/dev/null 2>&1; then
    alias tldr="tldr -L ja"
    alias h="tldr ${1:-curl}"
fi

# chezmoi
if command -v chezmoi >/dev/null 2>&1; then
    alias che="chezmoi"
    alias cha="che update --verbose"
    alias ca="che apply"
    alias cai="che init --apply https://github.com/budybye/dotfiles.git"
    alias ce="che execute-template"
    alias cbd="che edit"
    alias ccc="che edit-config"
    alias cs="che secret"
fi

# bitwarden
if command -v bw >/dev/null 2>&1; then
    alias bwbw='export BW_SESSION=$(bw unlock ${MASTER:-} --raw)'
fi

# vscode vscodium cursor mac ubuntu arm64
if command -v cursor >/dev/null 2>&1; then
    alias co="cursor"
elif [ -f "${HOME}/Applications/cursor" ]; then
    alias co="${HOME}/Applications/cursor --no-sandbox"
elif command -v codium >/dev/null 2>&1; then
    alias co="codium"
elif command -v code >/dev/null 2>&1; then
    alias co="code"
fi

# vscode 拡張機能の差分を表示
if command -v code >/dev/null 2>&1; then
    alias vex="code --list-extensions | jq -R -s 'split(\"\n\")[:-1]' > tmp/extensions.json && diff tmp/extensions.json ${HOME}/.config/Code/extensions.json"
fi

# docker
if command -v docker >/dev/null 2>&1; then
    alias d="docker"
    alias di="docker image"
    alias dr="docker run --rm"
    alias ds="docker stop $(docker ps -q)"
    alias dps="docker ps --format 'table {{.Names}}\t{{.Image}}\t{{.Ports}}\t{{.Status}}'"
    # イメージ名を引数にビルドし、プッシュする関数のエイリアス
    function ddd() {
      IMAGE_NAME="${1:-$(date +%Y%m%d%H%M%S)}"
      docker build -t "$IMAGE_NAME" . && docker push "$IMAGE_NAME"
    }

    ARCH=${ARCH:-$(dpkg --print-architecture || uname -m)}
    alias dx="docker run --rm -itd --privileged --platform linux/${ARCH} --hostname docker --name ubuntu-dev -p 33389:3389 -p 2222:22 ghcr.io/budybye/ubuntu-dev:main ubuntu ubuntu yes"

    ## 停止コンテナ、タグ無しイメージ、未使用ボリューム、未使用ネットワーク一括削除
    alias drm="docker system prune -af --volumes"
fi

if command -v docker-compose >/dev/null 2>&1; then
    alias dc="docker-compose"
    alias dcb="docker-compose build"
    alias dcu="docker-compose up"
    alias dcd="docker-compose down"
    alias dcr="docker-compose restart"
    alias dcl="docker-compose logs"
fi

# multipass
if command -v multipass >/dev/null 2>&1; then
    alias mu="multipass"
    alias md="mu launch docker -c 4 -m 8G -d 42G --timeout 3600 && mu info docker"
    alias ml="mu launch -n ubuntu -c 4 -m 8G -d 42G --timeout 7200 --cloud-init ${HOME}/dotfiles/cloud-init/multipass.yaml && mu exec ubuntu -- tail -7 /var/log/cloud-init.log"
    alias ms="mu stop ubuntu && mu delete -p ubuntu && mu list"
fi

# kube
if command -v kubectl >/dev/null 2>&1; then
    alias k="kubectl"
    if command -v kubectx >/dev/null 2>&1; then
        alias kx="kubectx"
    fi

    if command -v kubens >/dev/null 2>&1; then
        alias kn="kubens"
    fi
fi

if command -v podman >/dev/null 2>&1; then
    alias docker="podman"
fi

# apt
if command -v apt >/dev/null 2>&1; then
    alias agi="apt install -y"
    alias agu="apt update -y && apt upgrade -y"
    alias aq="apt search"
fi

if command -v dpkg  >/dev/null 2>&1; then
    alias pkg="dpkg"
fi

# brew
if command -v brew >/dev/null 2>&1; then
    alias bs="brew -S"
    alias bi="brew install"
    alias bu="brew update && brew upgrade"
    alias bcl="brew bundle cleanup --force --file ${HOME}/.config/Brewfile && brew autoremove && brew doctor"
    alias bf="brew bundle --file ${HOME}/.config/Brewfile"
    alias bb="bf && bu && bcl"
    function bbb() {
        bb
        dumpfile=${HOME}/.config/homebrew/Brewfile
        if [ -f ${dumpfile} ]; then
            cp ${dumpfile} ${dumpfile}.bak
            rm -f ${dumpfile}
        fi
        brew bundle dump --file ${dumpfile}
        cat ${dumpfile}
    }
fi

if command -v keploy >/dev/null 2>&1; then
    alias kr="keploy record -c"
    alias kt="keploy test --c"
    alias kc="keploy config"
    alias km="keploy mock"
fi

# speedtest
if command -v speedtest-cli >/dev/null 2>&1; then
    alias st="speedtest-cli"
fi

# mise
if command -v mise >/dev/null 2>&1; then
    alias mi="mise"
    alias miu="mi up && mi prune && mi list"
    alias mig="mi use -g"
    alias mil="mi list && mi set"
    alias mip="mi p ls-remote"
    alias mir="mi run"
    alias mib="mi build"
fi

# shelcheck
if command -v shellcheck >/dev/null 2>&1; then
    alias sc="shellcheck"
fi

# sheldon
if command -v sheldon >/dev/null 2>&1; then
    alias sd="sheldon lock --update"
fi

if command -v starship >/dev/null 2>&1; then
    alias ss="starship explain"
fi

if command -v asdf >/dev/null 2>&1; then
    alias asdf="asdf plugin-add"
fi

if command -v age >/dev/null 2>&1; then
    alias shhh="age-keygen | age --armor --passphrase > shhh.txt"
fi

if command -v byobu >/dev/null 2>&1; then
    alias tmux="byobu-tmux"
fi

if command -v trans >/dev/null 2>&1; then
    # 基本的な翻訳エイリアス
    alias ja='trans -b -t ja'    # 任意の言語から日本語へ
    alias en='trans -b -t en'    # 任意の言語から英語へ
fi

if command -v mpd >/dev/null 2>&1 && [ -f "${HOME}/.config/mpd/mpd.conf" ]; then
    alias mpd="mpd ${HOME}/.config/mpd/mpd.conf"
fi

if command -v ncmpcpp >/dev/null 2>&1; then
    alias ncm="ncmpcpp"
fi

if command -v wrangler >/dev/null 2>&1; then
    alias wr="wrangler"
    alias wrd="wrangler deploy"
    alias wrs="wrangler secret"
fi

if command -v warp-cli >/dev/null 2>&1; then
    alias wp="warp-cli"
    alias wpd="wp disconnect"
    alias wpr="wp registration delete && wp --accept-tos registration new"
    alias wpm="wp dns families malware"
    alias wpw="wp mode warp"
    alias wpc="wp connect"
    alias wps="wp status"
    alias warp="wpr && wpm && wpw && wpc && wps"
fi

if command -v cloudflared >/dev/null 2>&1; then
    alias cf="cloudflared"
    RDP_HOST=${RDP_HOST:-rdp.tmg-server.com}
    RDP_PORT=${RDP_PORT:-7777}
    alias rdp="cf access rdp --hostname ${RDP_HOST} --url localhost:${RDP_PORT}"
    RPI_HOST=${RPI_HOST:-rpi.tmg-server.com}
    RPI_PORT=${RPI_PORT:-33333}
    alias rpi="cf access rdp --hostname ${RPI_HOST} --url localhost:${RPI_PORT}"
fi

if command -v element-desktop >/dev/null 2>&1; then
    alias ele="element-desktop"
fi

if command -v openssl >/dev/null 2>&1; then
    function sec() {
        ENV_FILE=${ENV_FILE:-.env}
        echo ${@:-SECRET}=$(openssl rand -base64 32) >> ${ENV_FILE} && ls -al
    }
fi

if command -v rj >/dev/null 2>&1 && command -v jq >/dev/null 2>&1; then
    function rq() {
        API_URL=${API_URL:-"https://8102.jp/api"}
        rj ${API_URL} | jq
    }
fi

# ipfs
if command -v ipfs >/dev/null 2>&1; then
    DATA_DIR=${DATA_DIR:-.}
    function pin() {
        ipfs add -r -p -q --cid-version 1 ${@:-${DATA_DIR}}
    }
fi

if command -v fastfetch >/dev/null 2>&1; then
    alias ff="fastfetch -c all"
fi

# 猫のASCIIアートを表示
CAT_FILE=${CAT_FILE:-${HOME}/data/cat.txt}
if [ -f "${CAT_FILE}" ]; then
    alias x="cat ${CAT_FILE}"
fi
