# よく使うコマンド
alias q="exit"
alias c="clear"
alias hg="history | grep"
alias hh="cd ~"
alias ds='echo $PATH && echo $SHELL'
alias vv="env | grep"
alias www="ps aux"
alias re="exec ${SHELL} -l"
alias rl="exec ${SHELL} -l && exec ${SHELL}"
alias opi="for i in {1..3}; do time ${SHELL} -ic exit;done"
alias oppi="for i in {1..3}; do time ${SHELL} -lc exit;done"
alias note="${EDITOR:-vim} ${HOME}/note.md"  # ノートを開く
alias docs="cd ${HOME}/Documents"  # ドキュメントフォルダに移動

# ファイル操作のエイリアス
alias mv="mv -i"   # 上書き確認を有効にする
alias cp="cp -i"   # 上書き確認を有効にする
alias rm="rm -i"   # 削除確認を有効にする
alias mkdir="mkdir -p"  # 親ディレクトリも作成

# 猫のASCIIアートを表示
if [ -f "${HOME}/.config/neofetch/image.txt" ]; then
    alias x="cat ${HOME}/.config/neofetch/image.txt"
fi

# git
if command -v git >/dev/null 2>&1; then
    alias g="git"
    function bit() {
      if [ -z "$1" ]; then
        g add -A && g commit --allow-empty-message -m "♨️" && g push origin $(g branch | sed -n -e "s/^\* \(.*\)/\1/p")
      else
        g add -A && g commit -m "$1" && g push origin $(g branch | sed -n -e "s/^\* \(.*\)/\1/p")
      fi
    }
fi

if command -v gh >/dev/null 2>&1; then
    alias gset="gh secret set"
fi

if command -v curl >/dev/null 2>&1; then
    # alias curl="curl -s"  # サイレントモード
    alias wt="curl wttr.in"  # 天気予報を表示
    alias ppp="curl -4 icanhazip.com && curl -6 icanhazip.com"  # パブリックIPアドレスを表示
    alias xrp="curl https://raw.githubusercontent.com/budybye/dotfiles/refs/heads/main/home/.chezmoiscripts/run_after_xrp.sh | sh"
    alias qr="curl qrenco.de/${1:-xrp.gl}"
    alias bob="curl -X POST -H 'accept: application/json' -H 'Content-Type: application/json' -d '{\"name\": \"marley\"}' https://xrp.gl/bob/"

    function cid() {
      export IPFS_GATEWAY=${IPFS_GATEWAY:-https://ipfs.io}
      CID=${@:-bafybeigagd5nmnn2iys2f3doro7ydrevyr2mzarwidgadawmamiteydbzi}
      curl -L "${IPFS_GATEWAY}/ipfs/${CID}" -o "${CID}"
    }
fi

if command -v ping >/dev/null 2>&1; then
    alias pi="ping -c 5 1.1.1.1"
    alias ping="ping -c 5"  # 5回だけpingを送信
fi

if command -v netstat >/dev/null 2>&1; then
    alias ports="netstat -tuln"  # 開いているポートを表示
fi

if command -v python3 >/dev/null 2>&1; then
    alias python="python3"
    alias pip="pip3"
fi

# 宗教問題
if command -v bun >/dev/null 2>&1; then
    alias npm="bun"
    alias npx="bunx"
    alias yarn="bun"
    alias yarnx="bunx"
    alias dv="bun dev"
    alias dep="time bun run deploy"
fi

if command -v date >/dev/null 2>&1; then
    alias now="date +%Y%m%d%H%M%S"
fi

if command -v tree >/dev/null 2>&1; then
    alias tree="tree -NC"   # N: 文字化け対策 C: 色を付ける
fi

if command -v pbcopy >/dev/null 2>&1; then
    alias cx="pbcopy"
    alias cv="pbpaste"
    alias cb="pbcopy"
elif command -v xsel >/dev/null 2>&1; then
    alias cx="xsel -b -i"  # クリップボードにコピー
    alias cv="xsel -b -o"  # クリップボードの内容をコマンドに渡す
    alias cb="xsel -b"
fi

# http://localhost:3000 をブラウザで開く
if command -v xdg-open >/dev/null 2>&1; then
    alias lh="xdg-open http://localhost:3000"
    alias ggg="xdg-open https://youtube.com"
elif command -v open >/dev/null 2>&1; then
    alias lh="open -na 'Brave Browser' --args --new-window http://localhost:3000"
    alias ggg="open -na 'Brave Browser' --args --new-window https://youtube.com"
fi

# rosetta2のエイリアス
if command -v arch >/dev/null 2>&1; then
    alias amd="arch -x86_64 ${SHELL}"
    alias arm="arch -arm64 ${SHELL}"
fi

# ls lsd
if command -v lsd >/dev/null 2>&1; then
    alias ls='lsd --group-directories-first'
    alias l='ls -la'
    alias ll='ls -l'
    alias la='ls -a'
    alias lls='ls -la'
    alias lt='ls --tree'
fi

# bat
if command -v bat >/dev/null 2>&1; then
    alias cat="bat"
fi

# rg
if command -v rg >/dev/null 2>&1; then
    alias grep="rg"
fi

# fd
if command -v fd >/dev/null 2>&1; then
    alias find="fd"
fi

# zoxide
if command -v zoxide >/dev/null 2>&1; then
    alias cd="z"
fi

# tldr
if command -v tldr >/dev/null 2>&1; then
    # alias tldr="tldr -L ja"
    alias h="tldr"
fi

# chezmoi
if command -v chezmoi >/dev/null 2>&1; then
    alias che="chezmoi"
    alias cha="che update --verbose"
    alias ca="che apply"
    alias cai="che init --apply https://github.com/budybye/dotfiles.git"
    alias ce="che execute-template"
    alias cbd="che edit"
    alias ccc="che edit-config"
    alias cs="che secret"
fi

# bitwarden
if command -v bw >/dev/null 2>&1; then
    alias bwbw='export BW_SESSION=$(bw unlock ${MASTER:-} --raw)'
fi

# vscode vscodium cursor mac ubuntu arm64
if command -v cursor >/dev/null 2>&1; then
    alias co="cursor"
elif [ -f "${HOME}/Applications/cursor" ]; then
    alias co="${HOME}/Applications/cursor --no-sandbox"
elif command -v codium >/dev/null 2>&1; then
    alias co="codium"
elif command -v code >/dev/null 2>&1; then
    alias co="code"
fi

# vscode 拡張機能の差分を表示
if command -v code >/dev/null 2>&1; then
    alias vex="code --list-extensions | jq -R -s 'split(\"\n\")[:-1]' > tmp/extensions.json && diff tmp/extensions.json ${HOME}/.config/Code/extensions.json"
fi

# docker
if command -v docker >/dev/null 2>&1; then
    alias d="docker"
    alias di="docker image"
    alias dr="docker run --rm"
    alias ds="docker stop $(docker ps -q)"
    alias dps="docker ps --format 'table {{.Names}}\t{{.Image}}\t{{.Ports}}\t{{.Status}}'"
    # イメージ名を引数にビルドし、プッシュする関数のエイリアス
    alias ddd='function _ddd() { IMAGE_NAME="${1:-$(date +%Y%m%d%H%M%S)}"; docker build -t "$IMAGE_NAME" . && docker push "$IMAGE_NAME"; }; _ddd'

    alias dx='docker run --rm -itd --privileged --platform linux/${ARCH:-$(dpkg --print-architecture || uname -m)} --hostname docker --name ubuntu-dev -v $(pwd):/home/ubuntu/dev -p 33389:3389 -p 2222:22 ghcr.io/budybye/ubuntu-dev ubuntu ubuntu yes && dps'

    ## 停止コンテナ、タグ無しイメージ、未使用ボリューム、未使用ネットワーク一括削除
    alias drm="docker system prune -af --volumes"
fi

if command -v docker-compose >/dev/null 2>&1; then
    alias dc="docker-compose"
    alias dcb="docker-compose build"
    alias dcu="docker-compose up"
    alias dcd="docker-compose down"
fi

# multipass
if command -v multipass >/dev/null 2>&1; then
    alias mu="multipass"
    alias md="mu launch docker -c 4 -m 8G -d 40G  --timeout 3600 --mount ${HOME}/apps:/home/ubuntu/apps && mu info docker"
    alias ml="mu launch -n ubuntu 24.04 -c 4 -m 8G -d 44G --timeout 7200 --cloud-init ${HOME}/dotfiles/cloud-init/multipass.yaml && mu exec ubuntu -- tail -7 /var/log/cloud-init.log"
    alias ms="mu stop ubuntu && mu delete -p ubuntu && mu list"
    alias sm="ssh ubuntu@vm.local -i ~/.ssh/id_ed25519"
fi

# kube
if command -v kubectl >/dev/null 2>&1; then
    alias k="kubectl"
    # alias kx="kubectx"
    # alias kn="kubens"
fi

if command -v podman >/dev/null 2>&1; then
    alias docker="podman"
fi

# apt
if command -v apt >/dev/null 2>&1; then
    alias agi="sudo apt install -y"
    alias agu="sudo apt update -y && sudo apt upgrade -y"
    alias aq="apt search"
fi

# brew
if command -v brew >/dev/null 2>&1; then
    alias bs="brew -S"
    alias bi="brew install"
    alias bb="brew bundle --file ${HOME}/.config/Brewfile && brew bundle cleanup --force --file ${HOME}/.config/Brewfile && brew update && brew upgrade && brew autoremove && brew doctor"
    alias bbb="bb && rm -f ${HOME}/.config/homebrew/Brewfile && brew bundle dump --file ${HOME}/.config/homebrew/Brewfile && cat ${HOME}/.config/homebrew/Brewfile"
fi

# speedtest
if command -v speedtest >/dev/null 2>&1; then
    alias st="speedtest"
fi

# mise
if command -v mise >/dev/null 2>&1; then
    alias mi="mise"
    alias mir="mise registry"
    alias mig="mise use -g"
    alias mil="mise list && mise set"
fi

if command -v sheldon >/dev/null 2>&1; then
    alias sd="sheldon lock --update"
fi

if command -v starship >/dev/null 2>&1; then
    alias sex="starship explain"
fi

if command -v asdf >/dev/null 2>&1; then
    alias asdf="asdf plugin-add"
fi

if command -v age >/dev/null 2>&1; then
    alias shhh="age-keygen | age --armor --passphrase > shhh.txt"
fi

if command -v byobu >/dev/null 2>&1; then
    alias tmux="byobu-tmux"
fi

if command -v trans >/dev/null 2>&1; then
    # 基本的な翻訳エイリアス
    alias ja='trans -b -t ja'    # 任意の言語から日本語へ
    alias en='trans -b -t en'    # 任意の言語から英語へ

fi

if command -v mpd >/dev/null 2>&1 && [ -f "${HOME}/.config/mpd/mpd.conf" ]; then
    alias mpd="mpd ${HOME}/.config/mpd/mpd.conf"
fi

if command -v ncmpcpp >/dev/null 2>&1; then
    alias ncm="ncmpcpp"
fi

if command -v wrangler >/dev/null 2>&1; then
    alias wr="wrangler"
    alias wrd="wrangler deploy"
    alias wrs="wrangler secret"
    if [ -f "./dev/vars" ]; then
        alias wenv="source ./dev/vars && cp ./dev/vars .env"
    fi
fi

if command -v warp-cli >/dev/null 2>&1; then
    alias wp="warp-cli"
    alias wps="wp status"
    alias wpc="wp connect"
    alias wpd="wp disconnect"
    alias wps="wp mode warp"
    alias warp="wp registration delete && wp --accept-tos registration new && wp dns families malware && wps && wpc && wps"
fi

if command -v element-desktop >/dev/null 2>&1; then
    alias el="element-desktop"
fi

if command -v openssl >/dev/null 2>&1; then
    alias sec="echo SECRET=$(openssl rand -base64 32) >> .env && cat .env"
fi

if command -v rj >/dev/null 2>&1 && command -v jq >/dev/null 2>&1; then
    function rq() {
      rj ${@:-"https://8102.jp/api"} | jq
    }
fi
