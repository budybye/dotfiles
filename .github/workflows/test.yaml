name: Test

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  IMAGE_NAME: ubuntu-xrdp

jobs:

  docker-build-push-compose:
    runs-on: ubuntu-24.04
    # マトリックスを使って、複数のプラットフォームでテストを行う
    strategy:
      matrix:
        platforms: [linux/amd64, linux/arm64]
        # platforms: [linux/amd64, linux/arm64, linux/arm/v7]
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
      # ghcrにログイン
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Pushするイメージのメタデータを取得
      - uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/${{ env.IMAGE_NAME }}

      # buildxをセットアップ
      - uses: docker/setup-buildx-action@v3
        id: buildx

      # キャッシュを復元
      - uses: actions/cache@v2
        with:
          key: ${{ github.ref }}-${{ github.sha }} # キャッシュのキーを指定
          restore-keys: |
            ${{ github.ref }}
            refs/head/main
          path: /tmp/.docker-cache

      # qemuをセットアップ
      - uses: docker/setup-qemu-action@v3

      # イメージをビルドしてPush
      - uses: docker/build-push-action@v5
        with:
          builder: ${{ steps.buildx.outputs.name }} # buildxの名前を指定
          load: true # ビルドしたイメージをローカルにロード
          context: . # ビルドするコンテキストを指定
          file: .devcontainer/Dockerfile # ビルドするファイルを指定
          platforms: ${{ matrix.platforms }} # マトリックスで指定したプラットフォームを指定
          tags: ghcr.io/${{ github.repository }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }} # タグを指定
          push: true # ghcrにPush
          cache-from: type=local,src=/tmp/.docker-cache # キャッシュを指定
          cache-to: type=local,dest=/tmp/.docker-new-cache # キャッシュ更新

      # docker composeをテスト
      - name: docker compose test
        run: |
          cd .devcontainer
          docker compose up -d
          docker logs ipfs
          docker ps -a
          docker compose down

      # キャッシュを更新
      - name: Update cache
        run: |
          rm -rf /tmp/.docker-cache
          mv /tmp/.docker-new-cache /tmp/.docker-cache

      # cloud-initのチェック
      - uses: anderssonPeter/cloud-init-linter@v1
        with:
          files:
            cloud-init/multipass.yaml
            cloud-init/user-data
            cloud-init/network-config

  ubuntu-test:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: make
        run: make sense

  mac-test:
    runs-on: macos-15
    steps:
      - uses: actions/checkout@v4
      - name: make
        run: make sense

  windows-test:
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v4
      - uses: Vampire/setup-wsl@v3
        with:
          distribution: Ubuntu-24.04

      - shell: wsl-bash {0}
        run: |
          ls -la
          uname -a
