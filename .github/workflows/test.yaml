name: Test

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  IMAGE_NAME: ubuntu-dev

jobs:

  docker-test:
    runs-on: ubuntu-24.04
    # マトリックスを使って、複数のプラットフォームでテストを行う
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     platforms: [linux/amd64, linux/arm64]
        # platforms: [linux/amd64, linux/arm64, linux/arm/v7]
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
      # qemuをセットアップ
      - uses: docker/setup-qemu-action@v3
      # buildxをセットアップ
      - uses: docker/setup-buildx-action@v3
      # ghcrにログイン
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Pushするイメージのメタデータを取得
      - uses: docker/metadata-action@v5
        # id: meta
        # with:
        #   images: |
        #     ghcr.io/${{ github.repository }}/${{ env.IMAGE_NAME }}
        #   labels: |
        #     org.opencontainers.image.title=${{ github.repository }}-${{ env.IMAGE_NAME }}
        #     org.opencontainers.image.description=${{ github.ref }}
        #   annotations: |
        #     org.opencontainers.image.description=${{ github.ref }}

      # キャッシュを復元
      - uses: actions/cache@v4
        with:
          path: /tmp/.ubuntu-dev-cache-${{ github.sha }} # キャッシュのパスを指定
          key: ${{ github.ref }}-${{ github.sha }} # キャッシュのキーを指定
          restore-keys: |
            ${{ github.ref }}
            refs/head/main

      # イメージをビルドしてPush
      - uses: docker/build-push-action@v6
        with:
          context: . # ビルドするコンテキストを指定
          file: .devcontainer/Dockerfile # ビルドするファイルを指定
          platforms: linux/amd64, linux/arm64, linux/arm/v7
          tags: ghcr.io/${{ github.repository }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }} # タグを指定
          push: true # ghcrにPush
          cache-from: type=local,src=/tmp/.ubuntu-dev-cache-${{ github.sha }} # キャッシュを指定
          cache-to: type=local,dest=/tmp/.ubuntu-dev-new-cache-${{ github.sha }} # キャッシュ更新
          # labels: ${{ steps.meta.outputs.labels }} # ラベルを指定
          # annotations: ${{ steps.meta.outputs.annotations }} # 注釈を指定
          # outputs: type=image,name=target,annotation-index.org.opencontainers.image.description=${{ matrix.platforms }}

      - name: docker compose test
        uses: hoverkraft-tech/compose-action@v2.0.2
        with:
          compose-file: ".devcontainer/docker-compose.yaml"

      # キャッシュを更新
      - name: Update cache
        run: |
          rm -rf /tmp/.ubuntu-dev-cache-${{ github.sha }}
          mv /tmp/.ubuntu-dev-new-cache-${{ github.sha }} /tmp/.ubuntu-dev-cache-${{ github.sha }}

      # cloud-initのチェック
      - uses: anderssonPeter/cloud-init-linter@v1
        with:
          files: |
            cloud-init/multipass.yaml
            cloud-init/user-data
            cloud-init/network-config

  ubuntu-test:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: make
        run: make sense

  mac-test:
    runs-on: macos-15
    steps:
      - uses: actions/checkout@v4
      - name: make
        run: make sense

  windows-test:
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v4
      - uses: Vampire/setup-wsl@v3
        with:
          distribution: Ubuntu-24.04

      - shell: wsl-bash {0}
        run: |
          ls -la
          uname -a
